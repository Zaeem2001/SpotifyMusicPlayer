import json
import requests
from SpotipyRefresh import Refresh

class SpotifyPlayer:

        # initialize our class variables
        def __init__(self):
            self.user_id = "zaeemghauri"    # my Spotify user ID
            self.spotify_token = ""         # the access token, new one will be generated by call_refresh()
            self.state = 0                  # state of player (0 = setup, 1 = playing music, 2 = controlling music)

            self.playlist_name = ""         # name of playlist being listened to
            self.playlist_uri = ""          # uri of  playlist being listened to

            self.album_name = ""            # name of album being listened to
            self.album_uri = ""             # uri of  album being listened to
            self.track_name = ""            # name of track being listened to
            self.track_num = 0              # track number in album
            self.artists = ""               # artists of current track
            self.current_time = 0           # current time of music played

        # retrieves/sets user's playlist names and uris
        def get_playlists(self, item_num):
            #print("Getting user's playlists...")

            query = "https://api.spotify.com/v1/users/{}/playlists".format(self.user_id)
            response = requests.get(query, headers={"Content-Type": "application/json",
                                                    "Authorization": "Bearer {}".format(self.spotify_token)})
            response_json = response.json()

            playlists_data  = []
            # add all playlist names and context uris to a list
            for item in response_json["items"]:
                playlists_data.append(item["name"])
                playlists_data.append(item["external_urls"]["spotify"])

            # update class variables
            self.playlist_name = playlists_data[item_num]
            self.playlist_uri = playlists_data[item_num + 1]
            #print(playlists_data)

        # retrieves/sets current playback info (album, track, progress)
        def get_current_playback(self):
            print("Getting current playback info...")

            query = "https://api.spotify.com/v1/me/player/currently-playing"
            response = requests.get(query, headers={"Content-Type": "application/json",
                                                    "Authorization": "Bearer {}".format(self.spotify_token)})
            response_json = response.json()

            # update class variables
            self.album_name = response_json["item"]["album"]["name"]
            self.album_uri = response_json["item"]["album"]["external_urls"]["spotify"]
            self.track_name = response_json["item"]["name"]
            self.track_num = response_json["item"]["track_number"] - 1
            self.artists = response_json["item"]["artists"][0]["name"]
            self.current_time = response_json["progress_ms"]

        # start/resume music playback
        def play_music(self):
            print("Playing music...")

            query = "https://api.spotify.com/v1/me/player/play"
            data = json.dumps({"context_uri": self.playlist_uri, "offset": {"position": 0}})
            response = requests.put(query, data, headers={"Content-Type": "application/json",
                                                          "Authorization": "Bearer {}".format(self.spotify_token)})
            #print(response)

        def resume_music(self):
            print("Resuming music...")

            query = "https://api.spotify.com/v1/me/player/play"
            data = json.dumps({"context_uri": self.album_uri,
                               "offset": {"position": self.track_num},
                               "position_ms": self.current_time})
            response = requests.put(query, data, headers={"Content-Type": "application/json",
                                                          "Authorization": "Bearer {}".format(self.spotify_token)})
            print(response)

        # pause music playback
        def pause_music(self):
            print("Pausing music...")

            self.get_current_playback() # call to get latest playback data

            query = "https://api.spotify.com/v1/me/player/pause"
            response = requests.put(query, headers={"Content-Type": "application/json",
                                                    "Authorization": "Bearer {}".format(self.spotify_token)})
            #print(response)

        # REFRESH ACCESS TOKEN
        def call_refresh(self):
            print ("Refreshing token...")
            
            refreshCaller = Refresh()
            self.spotify_token = refreshCaller.refresh() # new access token created

            self.get_playlists(0) #test
