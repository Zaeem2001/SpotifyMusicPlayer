import json
import requests
from SpotipyRefresh import Refresh

# THINGS TO ADD
# (1) The first function I end up making should explain what each thing does (request.get/put/post, response, etc)
class SpotifyPlayer:

        # initialize our class variables
        def __init__(self):
            self.user_id = "zaeemghauri"    # my Spotify user ID
            self.spotify_token = ""         # the access token, new one will be generated by call_refresh()
            self.state = 0                  # state of player (0 = setup, 1 = playing music, 2 = controlling music)

            self.playlist_name = ""         # name of playlist being listened to
            self.playlist_uri = ""          # uri of the playlist being listened to

        # set up the player: choose the playlist you would like to listen to
        def get_playlists(self, item_num):
            #print("Getting user's playlists...")

            query = "https://api.spotify.com/v1/users/{}/playlists".format(self.user_id)
            response = requests.get(query, headers={"Content-Type": "application/json",
                                                    "Authorization": "Bearer {}".format(self.spotify_token)})
            response_json = response.json()

            playlists_data  = []
            # add all playlist names and context uris to a list
            for item in response_json["items"]:
                playlists_data.append(item["name"])
                playlists_data.append(item["external_urls"]["spotify"])

            # update class variables
            self.playlist_name = playlists_data[item_num]
            self.playlist_uri = playlists_data[item_num + 1]
            #print(playlists_data)

        # start/resume music playback
        def play_music(self):
            print("Playing music...")

            query = "https://api.spotify.com/v1/me/player/play"
            data = json.dumps({
                "context_uri": self.playlist_uri, "offset": {"position": 0}})
            response = requests.put(query, data, headers={"Content-Type": "application/json",
                                                          "Authorization": "Bearer {}".format(self.spotify_token)})
            print(response)

        # get available devices for music playback
        def get_devices(self):
            print("Getting devices...")

            query = "https://api.spotify.com/v1/me/player/devices"

            response = requests.get(query, headers={"Content-Type": "application/json",
                                                    "Authorization": "Bearer {}".format(self.spotify_token)})
            print(response.json()) 

        # see if something is currently being played [NO LONGER GONNA BE USED, STILL USEFUL FOR NEXT FUNCTION]
        def is_playing(self):
            query = "https://api.spotify.com/v1/me/player/currently-playing"
            response = requests.get(query, headers={"Content-Type": "application/json",
                                                    "Authorization": "Bearer {}".format(self.spotify_token)})
    
            response_json = response.json() 
            return response_json["is_playing"]

        # #returns the album, song? + artist, and current track from the
        # def get_current_playback(self):
        #     query = "https://api.spotify.com/v1/me/player/currently-playing"
        #     response = requests.get(query, headers={"Content-Type": "application/json",
        #                                             "Authorization": "Bearer {}".format(self.spotify_token)})
        #
        #     response_json = response.json()
        #     timestamp = response_json["progress_ms"]
        #     album = response_json["album"]["external_urls"]["spotify"]
        #
        #     return timestamp, album
                
            
        # get info on whats currently being played (playlist, track, progress)


        # ANOTHER VERSION (PROTORYPE OF PLAYMUSIC WITH TIMER TO RESUME WHERE YOU STARTED
        # def play_music(self, time):
        #     print("Playing music...")
        #
        #     query = "https://api.spotify.com/v1/me/player/play"
        #     data = json.dumps(
        #         {"context_uri": "https://open.spotify.com/playlist/4AcN0VFB8fFNsec37lmM7x?si=281fb264c4a246be",
        #          "offset": {"position": 0}})
        #     response = requests.put(query, data, headers={"Content-Type": "application/json",
        #                                                   "Authorization": "Bearer {}".format(self.spotify_token)})
        #     # print(response.json())

        # pause music playback
        def pause_music(self):
            print("Pausing music...")
            
            query = "https://api.spotify.com/v1/me/player/pause"
            response = requests.put(query, headers = {"Content-Type": "application/json", "Authorization": "Bearer {}".format(self.spotify_token)})
            #print(response.json())

        # REFRESH ACCESS TOKEN
        def call_refresh(self):
            print ("Refreshing token...")
            
            refreshCaller = Refresh()
            self.spotify_token = refreshCaller.refresh() # new access token created

            self.get_playlists(0) #test
